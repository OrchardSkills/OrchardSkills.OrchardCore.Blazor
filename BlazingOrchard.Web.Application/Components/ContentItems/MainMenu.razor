@using BlazingOrchard.Contents.Models
@using BlazingOrchard.Contents
@using BlazingOrchard.Menu.Models
@using MenuItemsListPart = BlazingOrchard.Menu.Models.MenuItemsListPart
@using BlazingOrchard.ContentFields.Models
@inherits ShapeTemplate
@attribute [Shape("Content__MainMenu")]


    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <a class="navbar-brand">Blazor</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    @foreach (var menuItem in MenuItems)
                    {
                        var linkMenuItemPart = menuItem.Get<LinkMenuItemPart>(nameof(LinkMenuItemPart));

                        if (linkMenuItemPart != null)
                        {
                            var menuItemUrl = linkMenuItemPart.Url.TrimStart('~');
                            <li class="nav-item">
                                <a class="nav-link text-dark" href="@menuItemUrl">@linkMenuItemPart.Name</a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </nav>

    @code {
        private ContentItem ContentItem => (ContentItem)Model.ContentItem;
        private IEnumerable<ContentItem> MenuItems => ContentItem.Get<MenuItemsListPart>(nameof(MenuItemsListPart))!.MenuItems;
        private bool collapseNavMenu = true;
        private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

        private void ToggleNavMenu()
        {
            collapseNavMenu = !collapseNavMenu;
        }
    }