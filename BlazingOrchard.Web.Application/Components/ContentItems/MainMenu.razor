@using BlazingOrchard.Contents.Models
@using BlazingOrchard.Contents
@using BlazingOrchard.Menu.Models
@using MenuItemsListPart = BlazingOrchard.Menu.Models.MenuItemsListPart
@using BlazingOrchard.ContentFields.Models
@inherits ShapeTemplate
@attribute [Shape("Content__MainMenu")]

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Blazing Orchard</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
<ul class="nav flex-column">
    @foreach (var menuItem in MenuItems)
    {
        var linkMenuItemPart = menuItem.Get<LinkMenuItemPart>(nameof(LinkMenuItemPart));

        if (linkMenuItemPart != null)
        {
            var menuItemUrl = linkMenuItemPart.Url.TrimStart('~');
            var matchMode = string.IsNullOrWhiteSpace(menuItemUrl.TrimStart('/')) ? NavLinkMatch.All : NavLinkMatch.Prefix;
            var icon = menuItem.Get<ContentPart>(menuItem.ContentType).Get<TextField>("IconClass")?.Text ?? "";
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@menuItemUrl" Match="matchMode">
                    <span class="@icon" aria-hidden="true"></span> @linkMenuItemPart.Name
                </NavLink>
            </li>
        }
    }
</ul>
</div>

@code {
    private ContentItem ContentItem => (ContentItem)Model.ContentItem;
    private IEnumerable<ContentItem> MenuItems => ContentItem.Get<MenuItemsListPart>(nameof(MenuItemsListPart))!.MenuItems;
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}